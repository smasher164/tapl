// Code generated by re2c 3.0 on Wed Jan 25 22:56:30 2023, DO NOT EDIT.
//go:generate re2go scan.re -o scan.go -i
package main

import "strconv"

func peek(b []byte, i int, limit int) byte {
	if limit <= i {
		return 0
	}
	return b[i]
}

type Token = int
const (
	EOFTok Token = iota
)

type stlcLex struct {
	i int
	saved int
	limit int
	b []byte
	cmds []Command
}

func (sc *stlcLex) Lex(lval *stlcSymType) int {
	beg, end := 0, 0
	var yyt1 int
	
{
	var yych byte
	yyaccept := 0
	sc.saved = sc.i
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case '\t','\n':
		fallthrough
	case '\r':
		fallthrough
	case ' ':
		goto yy2
	case '(':
		goto yy4
	case ')':
		goto yy5
	case ',':
		goto yy6
	case '-':
		goto yy7
	case '.':
		goto yy9
	case '0','1','2','3','4','5','6','7','8','9':
		yyt1 = sc.i
		goto yy10
	case ':':
		goto yy12
	case ';':
		goto yy13
	case '<':
		goto yy14
	case '=':
		goto yy15
	case '>':
		goto yy17
	case 'A':
		fallthrough
	case 'C','D','E','F','G','H','I','J','K','L','M':
		fallthrough
	case 'O','P','Q','R','S','T':
		fallthrough
	case 'V','W','X','Y','Z':
		yyt1 = sc.i
		goto yy18
	case 'B':
		yyt1 = sc.i
		goto yy21
	case 'N':
		yyt1 = sc.i
		goto yy22
	case 'U':
		yyt1 = sc.i
		goto yy23
	case '_':
		goto yy24
	case 'a':
		yyt1 = sc.i
		goto yy25
	case 'b':
		fallthrough
	case 'd':
		fallthrough
	case 'g','h':
		fallthrough
	case 'j','k':
		fallthrough
	case 'm','n':
		fallthrough
	case 'q','r':
		fallthrough
	case 'v','w','x','y','z':
		yyt1 = sc.i
		goto yy27
	case 'c':
		yyt1 = sc.i
		goto yy29
	case 'e':
		yyt1 = sc.i
		goto yy30
	case 'f':
		yyt1 = sc.i
		goto yy31
	case 'i':
		yyt1 = sc.i
		goto yy32
	case 'l':
		yyt1 = sc.i
		goto yy33
	case 'o':
		yyt1 = sc.i
		goto yy34
	case 'p':
		yyt1 = sc.i
		goto yy35
	case 's':
		yyt1 = sc.i
		goto yy36
	case 't':
		yyt1 = sc.i
		goto yy37
	case 'u':
		yyt1 = sc.i
		goto yy38
	case '{':
		goto yy39
	case '|':
		goto yy40
	case '}':
		goto yy41
	case 0xCE:
		goto yy42
	default:
		if (sc.limit <= sc.i) {
			goto yy111
		}
		yyt1 = sc.i
		goto yy1
	}
yy1:
	beg = yyt1
	{ unexpected(string(sc.b[beg:beg+1])) }
yy2:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case '\t','\n':
		fallthrough
	case '\r':
		fallthrough
	case ' ':
		goto yy2
	default:
		goto yy3
	}
yy3:
	{ return sc.Lex(lval) }
yy4:
	sc.i++
	{ return LparenTok }
yy5:
	sc.i++
	{ return RparenTok }
yy6:
	sc.i++
	{ return CommaTok }
yy7:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case '>':
		goto yy43
	default:
		goto yy8
	}
yy8:
	sc.i = sc.saved
	if (yyaccept == 0) {
		yyt1 = sc.i
		goto yy1
	} else {
		goto yy20
	}
yy9:
	sc.i++
	{ return DotTok }
yy10:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case '0','1','2','3','4','5','6','7','8','9':
		goto yy10
	default:
		goto yy11
	}
yy11:
	beg = yyt1
	end = sc.i
	{ lval.intval, _ = strconv.Atoi(string(sc.b[beg:end])); return IntTok }
yy12:
	sc.i++
	{ return ColonTok }
yy13:
	sc.i++
	{ return SemicolonTok }
yy14:
	sc.i++
	{ return LessThanTok }
yy15:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case '>':
		goto yy44
	default:
		goto yy16
	}
yy16:
	{ return EqualsTok }
yy17:
	sc.i++
	{ return GreaterThanTok }
yy18:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
yy19:
	switch (yych) {
	case 'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z':
		goto yy18
	default:
		goto yy20
	}
yy20:
	beg = yyt1
	end = sc.i
	{ lval.text = sc.b[beg:end]; return UCIDTok }
yy21:
	yyaccept = 1
	sc.i++
	sc.saved = sc.i
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case 0x00:
		goto yy20
	case 'o':
		goto yy45
	default:
		goto yy19
	}
yy22:
	yyaccept = 1
	sc.i++
	sc.saved = sc.i
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case 0x00:
		goto yy20
	case 'a':
		goto yy46
	default:
		goto yy19
	}
yy23:
	yyaccept = 1
	sc.i++
	sc.saved = sc.i
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case 0x00:
		goto yy20
	case 'n':
		goto yy47
	default:
		goto yy19
	}
yy24:
	sc.i++
	{ return UnderscoreTok }
yy25:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case 0x00:
		goto yy26
	case 's':
		goto yy48
	default:
		goto yy28
	}
yy26:
	beg = yyt1
	end = sc.i
	{ lval.text = sc.b[beg:end]; return LCIDTok }
yy27:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
yy28:
	switch (yych) {
	case 'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z':
		goto yy27
	default:
		goto yy26
	}
yy29:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case 0x00:
		goto yy26
	case 'a':
		goto yy50
	default:
		goto yy28
	}
yy30:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case 0x00:
		goto yy26
	case 'l':
		goto yy51
	default:
		goto yy28
	}
yy31:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case 0x00:
		goto yy26
	case 'a':
		goto yy52
	case 'i':
		goto yy53
	default:
		goto yy28
	}
yy32:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case 0x00:
		goto yy26
	case 'f':
		goto yy54
	case 'n':
		goto yy56
	case 's':
		goto yy58
	default:
		goto yy28
	}
yy33:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case 0x00:
		goto yy26
	case 'e':
		goto yy59
	default:
		goto yy28
	}
yy34:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case 0x00:
		goto yy26
	case 'f':
		goto yy60
	default:
		goto yy28
	}
yy35:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case 0x00:
		goto yy26
	case 'r':
		goto yy62
	default:
		goto yy28
	}
yy36:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case 0x00:
		goto yy26
	case 'u':
		goto yy63
	default:
		goto yy28
	}
yy37:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case 0x00:
		goto yy26
	case 'h':
		goto yy64
	case 'r':
		goto yy65
	default:
		goto yy28
	}
yy38:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case 0x00:
		goto yy26
	case 'n':
		goto yy66
	default:
		goto yy28
	}
yy39:
	sc.i++
	{ return LbraceTok }
yy40:
	sc.i++
	{ return OrTok }
yy41:
	sc.i++
	{ return RbraceTok }
yy42:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case 0xBB:
		goto yy67
	default:
		goto yy8
	}
yy43:
	sc.i++
	{ return SkinnyArrowTok }
yy44:
	sc.i++
	{ return FatArrowTok }
yy45:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case 'o':
		goto yy68
	default:
		goto yy8
	}
yy46:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case 't':
		goto yy69
	default:
		goto yy8
	}
yy47:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case 'i':
		goto yy70
	default:
		goto yy8
	}
yy48:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case 'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z':
		goto yy27
	default:
		goto yy49
	}
yy49:
	{ return AsTok }
yy50:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case 0x00:
		goto yy26
	case 's':
		goto yy71
	default:
		goto yy28
	}
yy51:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case 0x00:
		goto yy26
	case 's':
		goto yy72
	default:
		goto yy28
	}
yy52:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case 0x00:
		goto yy26
	case 'l':
		goto yy73
	default:
		goto yy28
	}
yy53:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case 0x00:
		goto yy26
	case 'x':
		goto yy74
	default:
		goto yy28
	}
yy54:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case 'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z':
		goto yy27
	default:
		goto yy55
	}
yy55:
	{ return IfTok }
yy56:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case 'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z':
		goto yy27
	default:
		goto yy57
	}
yy57:
	{ return InTok }
yy58:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case 0x00:
		goto yy26
	case 'z':
		goto yy76
	default:
		goto yy28
	}
yy59:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case 0x00:
		goto yy26
	case 't':
		goto yy77
	default:
		goto yy28
	}
yy60:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case 'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z':
		goto yy27
	default:
		goto yy61
	}
yy61:
	{ return OfTok }
yy62:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case 0x00:
		goto yy26
	case 'e':
		goto yy79
	default:
		goto yy28
	}
yy63:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case 0x00:
		goto yy26
	case 'c':
		goto yy80
	default:
		goto yy28
	}
yy64:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case 0x00:
		goto yy26
	case 'e':
		goto yy81
	default:
		goto yy28
	}
yy65:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case 0x00:
		goto yy26
	case 'u':
		goto yy82
	default:
		goto yy28
	}
yy66:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case 0x00:
		goto yy26
	case 'i':
		goto yy83
	default:
		goto yy28
	}
yy67:
	sc.i++
	{ return LambdaTok }
yy68:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case 'l':
		goto yy84
	default:
		goto yy8
	}
yy69:
	sc.i++
	{ return NatTok }
yy70:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case 't':
		goto yy85
	default:
		goto yy8
	}
yy71:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case 0x00:
		goto yy26
	case 'e':
		goto yy86
	default:
		goto yy28
	}
yy72:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case 0x00:
		goto yy26
	case 'e':
		goto yy88
	default:
		goto yy28
	}
yy73:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case 0x00:
		goto yy26
	case 's':
		goto yy90
	default:
		goto yy28
	}
yy74:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case 'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z':
		goto yy27
	default:
		goto yy75
	}
yy75:
	{ return FixTok }
yy76:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case 0x00:
		goto yy26
	case 'e':
		goto yy91
	default:
		goto yy28
	}
yy77:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case 'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q':
		fallthrough
	case 's','t','u','v','w','x','y','z':
		goto yy27
	case 'r':
		goto yy92
	default:
		goto yy78
	}
yy78:
	{ return LetTok }
yy79:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case 0x00:
		goto yy26
	case 'd':
		goto yy93
	default:
		goto yy28
	}
yy80:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case 0x00:
		goto yy26
	case 'c':
		goto yy95
	default:
		goto yy28
	}
yy81:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case 0x00:
		goto yy26
	case 'n':
		goto yy97
	default:
		goto yy28
	}
yy82:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case 0x00:
		goto yy26
	case 'e':
		goto yy99
	default:
		goto yy28
	}
yy83:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case 0x00:
		goto yy26
	case 't':
		goto yy101
	default:
		goto yy28
	}
yy84:
	sc.i++
	{ return BoolTok }
yy85:
	sc.i++
	{ return UnitTok }
yy86:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case 'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z':
		goto yy27
	default:
		goto yy87
	}
yy87:
	{ return CaseTok }
yy88:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case 'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z':
		goto yy27
	default:
		goto yy89
	}
yy89:
	{ return ElseTok }
yy90:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case 0x00:
		goto yy26
	case 'e':
		goto yy103
	default:
		goto yy28
	}
yy91:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case 0x00:
		goto yy26
	case 'r':
		goto yy105
	default:
		goto yy28
	}
yy92:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case 0x00:
		goto yy26
	case 'e':
		goto yy106
	default:
		goto yy28
	}
yy93:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case 'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z':
		goto yy27
	default:
		goto yy94
	}
yy94:
	{ return PredTok }
yy95:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case 'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z':
		goto yy27
	default:
		goto yy96
	}
yy96:
	{ return SuccTok }
yy97:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case 'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z':
		goto yy27
	default:
		goto yy98
	}
yy98:
	{ return ThenTok }
yy99:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case 'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z':
		goto yy27
	default:
		goto yy100
	}
yy100:
	{ return TrueTok }
yy101:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case 'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z':
		goto yy27
	default:
		goto yy102
	}
yy102:
	{ return UnitValTok }
yy103:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case 'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z':
		goto yy27
	default:
		goto yy104
	}
yy104:
	{ return FalseTok }
yy105:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case 0x00:
		goto yy26
	case 'o':
		goto yy107
	default:
		goto yy28
	}
yy106:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case 0x00:
		goto yy26
	case 'c':
		goto yy109
	default:
		goto yy28
	}
yy107:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case 'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z':
		goto yy27
	default:
		goto yy108
	}
yy108:
	{ return IsZeroTok }
yy109:
	sc.i++
	yych = peek(sc.b, sc.i, sc.limit)
	switch (yych) {
	case 'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z':
		goto yy27
	default:
		goto yy110
	}
yy110:
	{ return LetRecTok }
yy111:
	{ return EOFTok }
}

}

func (stlcLex) Error(s string) {
	unexpected(s)
}